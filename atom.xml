<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Welcome to Pandora's Box(Why)]]></title>
  <link href="http://hustcalm.me/atom.xml" rel="self"/>
  <link href="http://hustcalm.me/"/>
  <updated>2012-11-25T01:40:21+08:00</updated>
  <id>http://hustcalm.me/</id>
  <author>
    <name><![CDATA[CALM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[纪念一下刚刚过去的BLUG 2012]]></title>
    <link href="http://hustcalm.me/blog/2012/11/25/ji-nian-yi-xia-gang-gang-guo-qu-de-blug-2012/"/>
    <updated>2012-11-25T01:30:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/11/25/ji-nian-yi-xia-gang-gang-guo-qu-de-blug-2012</id>
    <content type="html"><![CDATA[<p>挺high的一个party，nice game， nice food， nice guys!!!</p>

<p>嗯，北理工的xy大哥，北邮的ysy兄弟，清华的fxt师兄，澳大利亚的richard，SUSE的Shawn，幽默的ABC，给力的<a href="http://blug.chinalug.org">BLUG</a>!</p>

<p>加入了OpenDrone小组，希望能在这里找到乐趣:)</p>

<p>Safe and sound, finally I got what I want.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress From Ubuntu 12.04]]></title>
    <link href="http://hustcalm.me/blog/2012/11/24/hello-octopress-from-ubuntu-12-dot-04/"/>
    <updated>2012-11-24T01:00:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/11/24/hello-octopress-from-ubuntu-12-dot-04</id>
    <content type="html"><![CDATA[<p>今天又把Octopress博客安了一个新家，Windows XP下虚拟出来的Ubuntu 12.04.想想从Cygwin上开始建立博客，后来到Ubuntu 11.04上维护，现在又搭一个新窝，自己都佩服自己的折腾能力了:)</p>

<p>遇到的主要问题，除了<code>posix-spawn</code>，竟然还有<code>openssl</code>，随之而来的依赖缺失，mkmf，编译的时候又输给了路径问题，Ubuntu本身带着1.8.7的<code>ruby</code>，而现在我的Octopress使用<code>1.9.3-p194</code>，并且用了<code>rbenv</code>和<code>ruby-build</code>进行版本管理，这给编译<code>openssl</code>的时候带来一个困扰，直接在<code>ext/openssl</code>下运行<code>ruby
extconf.rb</code>的话生成的Makefile是依赖系统的1.8.7的，因为直接执行<code>ruby</code>，由于路径设置问题，运行的是系统的Ruby，而不是我们自己安装的，所以这里需要小心，通过<code>~/.rbenv/versions/1.9.3-p194/bin/ruby extconf.rb</code>解决问题。</p>

<p>参考的链接有以下，感谢他们：</p>

<!--more-->


<ul>
<li><a href="http://www.360doc.com/content/12/0216/16/1016783_187128091.shtml">为已经存在的github Octopress配置本地环境</a></li>
<li><a href="http://madeye.me/2011/12/17/setup-octopress-on-windows">在Cygwin中搭建Octopress环境</a></li>
<li><a href="http://ns2.beta4better.org/2012/01/octopress-no-such-file-to-load-zlib-or-openssl.html">Octopress:no such file to load:zlib,openssl</a></li>
<li><a href="http://blog.csdn.net/dqatsh/article/details/2125089">ubuntu下安装ruby后openssl找不到的问题</a></li>
<li><a href="http://www.myexception.cn/ruby-rails/665543.html">in &#8216;require&#8217;:no such file to load -openssl (LoadError)</a></li>
<li><a href="http://www.linuxdiyf.com/viewarticle.php?id=68545">安装ruby-debug-base是mkmf(LoadError)问题的解决办法</a></li>
</ul>


<p>暂时就这么多了，发现有问题才比较有意思。</p>

<p>如果你在设置Octopress的时候有任何疑问，欢迎和我讨论:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[科苑有感]]></title>
    <link href="http://hustcalm.me/blog/2012/11/21/ke-yuan-you-gan/"/>
    <updated>2012-11-21T17:58:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/11/21/ke-yuan-you-gan</id>
    <content type="html"><![CDATA[<p>想想也好久不更新博客了，一是没啥写的，另外就是没时间！</p>

<p>那么我去做什么了呢？想想自己来到科苑已经有三个月了快，回顾下自己的生活，谈谈自己的感受。</p>

<h2>考试</h2>

<p>最近的话题是考试。没完没了的考试，《随机过程》，《模式识别》，《数值分析》还有刚刚考完的《机器学习》，而为了这些考试，已经几个周末没有放松过了。时间回退到一年前，我会想到自己会考这些吗？来到科苑三个月，我再一次知道自己有多菜，科研的路有多长，<!--more-->任何一门课想要学好，都要投入大量的时间，实实在在的，因为这不是为了高考做题目，也不是为本科搞GPA而学（我不得不承认，我好像不怎么考虑GPA），那么这是为什么呢？通俗地说是本事，学名点叫做技能，不做，想在科苑混，几门课都学不好，那还有什么好谈的？因此，现在一听到科学泰斗，一听到学术牛人，我必须是十分佩服的。耐得住寂寞又能在学术上有所发挥，这本身就是一件很了不起的事情。</p>

<h2>考试之外</h2>

<p>说完考试，说说考试以外的东西，成然，我不是为了考试而考试，我对同学们也总是这么说。不怕考试，就怕学不会啊。拿机器学习来说，可能很多同学认为会挂，甚至埋怨老师的题库就是个谎言，仔细想想这有什么呢？就算考试自我感觉很理想，那么开课两个月的机器学习，我们究竟学到了哪些东西呢？线性回归，支持向量机等等，考试之外，我们能拿来做什么？？？</p>

<h2>我还在忙什么？</h2>

<p>占据了很多时间应该属于VLC播放器开发团队的事情吧，作为一个网络协作开发的团队，前期的代价很高，目前整个仍在磨合期，不过相信一定会越走越好。</p>

<h3>关于Linux</h3>

<p>大一的时候就开始接触了Linux，在Dian也有很多的Linux高手，最近发现自己的Linux技能马马虎虎，需要加强实践能力。个人感觉centos作为服务器，对用户很有好，至少从我知道的Unix的哲学来看，比较符合Unix的传统，Ubuntu的Server没有怎么用过，但是Canonical的过多改进反而会让系统管理员无所适从。Red Hat在全球服务器市场的地位真不是盖的。之后还是要从APUE什么的出发，以不变应万变。</p>

<h3>VLC中文社区</h3>

<p>在centos上花了半天时间搭建的<a href="http://vlcchina.org">VLC中文社区</a>是VLC中国开发团队走出的社区化的第一步，现在还很不成熟，典型的LAMP架构，由drupal驱动，相关的服务器端支持，用的最省事的yum安装，今后准备加上Nginx跟Apache协同做Server，Profile必须尽快做下，访问速度现在不堪忍受。作为一个出发点，向<a href="http://videolan.org">VideoLAN</a>看齐！</p>

<h3>VLC中文WIKI</h3>

<p>基于mediawiki，花了三个小时搭建，最后的short_URLS问题竟然没有配置好，姑且先这样。今后陆续的VLC WIKI的中文化会展开，希望感兴趣的朋友联系我，一起为开源社区做贡献。</p>

<h3>VLC开发工作</h3>

<p>开发团队处于初期，壮大的过程中也在走向成熟，目前的不乐观终將经过大家的努力变得乐观起来。为自己加油！</p>

<h2>关于以后</h2>

<p>路是自己走出来的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A stupid tutorial on starting contribution to Opensource software]]></title>
    <link href="http://hustcalm.me/blog/2012/11/02/a-stupid-tutorial-on-starting-contribution-to-opensource-software/"/>
    <updated>2012-11-02T16:32:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/11/02/a-stupid-tutorial-on-starting-contribution-to-opensource-software</id>
    <content type="html"><![CDATA[<p><strong>Anyone</strong> who&#8217;s not a nerd can get on boat after this stupid tutorial, I guess.     <br/>
<strong>All</strong> you need is passion before contributing to An Open Source Project and some learning about their workflow maybe.   <br/>
<strong>Open Source</strong> projects need help and every project owner does know this. Besides writing code, they got lots of to do, finding and reporting bugs, do documentation, answer questions on forums or IRC channels, some translation, etc.</p>

<p>And today I want to simply talk about how to get startted on Open Source Community.</p>

<h2>Knowing about Workflow</h2>

<p>Right, we should start here.You want to get involed, you got to know the game rules and how the work is done. Basically,most open source projects have their version control system, their bug trackers, their mailing lists, their IRC channels and their wiki of courese, maybe they also have a forum.</p>

<!--more-->


<p>Do read about the wiki pages and I think you should get on feet after that.</p>

<h2>Get familiar</h2>

<p>As soon as you know how is everyting being done, you may start to think about to do something. So how to start? Suscribe their mailing lists, go around the forums, to introduce yourself on IRC and just show up to let people know you:)If you are a coder, then go to the bug tracker system, doing some easy hacks to get to know the whole world.</p>

<p>What? Don&#8217;t know any code or sth? Don&#8217;t worry, try to do some translation if possible or just use the software and see if everyting is going ok. If
not, of course, search the bug tracker, if you confirm this is a new bug ,report it and describe it as the way other people do.</p>

<p>Maybe several days later, people will know you and appreciate your contribution. If not, don&#8217;t get depressed, just hang on and your efforts will pay.</p>

<p>Of course get no happy? Switch to a new project as you like:)</p>

<h2>Do Thins Right</h2>

<p>Let&#8217;s say you have been enjoying involed in the project and maybe it&#8217;s time to do something more. But remember everything must be obey the game rules:)</p>

<p>Make patches and submit it to the developers(of course via emails) and be caution don&#8217;t make any unnecessary minor changes.</p>

<h2>New ideas</h2>

<p>As you are doing more and more contribution, maybe you got some good ideas to enhence the project。Don&#8217;t hesitate to write the maintainer of the project and get feedback about your thoughts, let other people know it and discuss if it is worth it.</p>

<h2>Help others</h2>

<p>You know what? You have earned much knowledge about the project after some strugellings though. Sure you would be happy to help the newbies to get on track. So don&#8217;t be mean to ask questions and reply emails if you can.</p>

<h2>What&#8217;s Next</h2>

<p>As you have completely got knowledge about contributing to Open Source Project, you are free to broaden your horizon now. Choose some other projects that interest you or even get your own project open sourced and enjoy the cooperation with people from every corner in the world:)</p>

<h2>Referencs</h2>

<ul>
<li><a href="http://www.kegel.com/academy/opensource.html">Contributing to Open Source Projects HOWTO</a></li>
<li><a href="http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html">A Git Workflow for Agile Teams</a></li>
</ul>


<p><strong>Hope you enjoy the life with the Opensource Community:)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用ifttt和Openshift搭建用于知识共享的Wordpress博客]]></title>
    <link href="http://hustcalm.me/blog/2012/10/30/yong-ifttthe-openshiftda-jian-yong-yu-zhi-shi-gong-xiang-de-wordpressbo-ke/"/>
    <updated>2012-10-30T10:18:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/30/yong-ifttthe-openshiftda-jian-yong-yu-zhi-shi-gong-xiang-de-wordpressbo-ke</id>
    <content type="html"><![CDATA[<p>笔者一直通过RSS订阅了解一些行业信息并且看一些比较好玩的东西，比如<a href="http://www.iplaysoft.com/">异次元软件世界</a>什么的:)用了很长一段时间的QQ邮箱的阅读空间，整理了很多的收藏和分享以及自己的Tag Cloud，无奈，QQ邮箱的阅读空间除了对<a href="http://weibo.com/u/1236738912">Weibo</a>比较友好以外，跟其它产品的交互比较弱，给QQ团队发建议希望他们能够提供导出Tag的功能，没人搭理:(</p>

<p>Anyway，现在转到Google Reader下了，把QQ邮箱的阅读空间的RSS导出到OPML文件，之后导入到GReader。</p>

<p>分享是学习的一大乐趣，之前一直是把好文分享到微博或者Delicious，现在萌生了把自己的订阅再挑选一些值得玩味的文章自动更新到blog的想法。互联网的神奇使得我的这个想法很快就实现了，主要用到的服务如下：</p>

<!--more-->


<ul>
<li><p><a href="http://www.ifttt.com">ifttt</a>
实现GReader星标文章自动post到WordPress站点。</p></li>
<li><p><a href="http://openshift.redhat.com">Openshift</a>
提供Wordpress站点的托管。</p></li>
<li><p><a href="http://wordpress.org">WordPress</a>
不解释。用到了一些插件：</p></li>
</ul>


<p><strong>Akismet</strong> 用于处理垃圾评论。</p>

<p><strong>Auto Describe Taxonomies</strong> 自动生成文章的tag和category。</p>

<p><strong>Efficient Related Posts</strong> 显示相关文章。</p>

<p><strong>WP Limit Posts Automatically</strong> 显示文章摘要而不是全文。</p>

<p><strong>WTI Like Post</strong> 实现文章的“thumbs up“和”thumbs down“功能。</p>

<p>效果请看<a href="http://wordpress-hustcalm.rhcloud.com">笔者的知识分享站点</a>.</p>

<p>Enjoy auto blogging and knowledge sharring；）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用PortableApps.com制作自己的U3盘，实现PC Anywhere]]></title>
    <link href="http://hustcalm.me/blog/2012/10/24/shi-yong-portableapps-dot-comzhi-zuo-zi-ji-de-u3pan-%2Cshi-xian-pc-anywhere/"/>
    <updated>2012-10-24T23:55:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/24/shi-yong-portableapps-dot-comzhi-zuo-zi-ji-de-u3pan-,shi-xian-pc-anywhere</id>
    <content type="html"><![CDATA[<p>现在绿化软件的方法层出不穷，主流的云端软件平台以及ThinAPP基本都是在一个SandBox中运行软件，实现所谓的绿色化。今天向大家推荐一款绿色软件平台<a href="http://portableapps.com">PortableApps.com</a>，具体实现机理没有研究，不过使用起来觉得较好，关于是可以安装到U盘中随身携带，碰到了脾气不好的电脑，很有可能就派上用场了，呵呵:)</p>

<!--more-->


<p>具体如何安装什么的，就不罗嗦了，标准的Windows软件的安装和使用方法，目前<a href="http://portableapps.com">PortableApps.com</a>支持所有的Windows系列系统以及Linux下的Wine，下面只给出链接，想用的朋友自行下载安装折腾吧:)</p>

<ul>
<li><a href="http://portableapps.com">PortableApps.com的官方主页</a>     <br/>
其下载链接是在<a href="http://sourceforge.net">SourceForge</a>上的，有可能需要梯子，如果有困难，可以移步别处下载。</li>
<li><a href="http://portableapps.com/development">PortableApps.Development</a>       <br/>
教你怎么制作自己的绿色软件，当然是符合一定规范的，这里有可以折腾的地方。</li>
<li><a href="http://www.portableappc.com">PortableApps.com的中文站点</a>     <br/>
这里有一些比较大型软件的绿化，比如QQ，迅雷，WPS等等，有需要的朋友就有福啦:)而官方站点通常是一些国外的软件，而且基本上都是比较轻量级的。</li>
<li><a href="http://www.portableappc.com/guide">PortableApps.com的中文开发指引</a>   <br/>
个人认为这个开发指引还是比较赞的，可以给没有多少软件开发功底的同学一个制作软件的机会，有开发基础的也可以学习下PortableApps.com的软件格式约定。</li>
<li><a href="http://portableappz.blogspot.com">PortableAppZ</a>      <br/>
这是一个山寨版，相比于官方的只提供开源软件，PortableAppZ提供很多常用的软件，不过访问blogspot比较困难，希望的朋友自己想办法吧&#8230;</li>
</ul>


<p>除了这个，我特别喜欢微软收购的一个公司开发的一个工具套件<a href="http://www.systeminternals.com">SystemInternals</a>，把它作为系统system32目录下系统工具的一个补充，没有用的朋友可以试试。</p>

<p><strong>有更好的办法或者很酷的绿化软件的方法，请留言分享:)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[盘点我知道的代码托管站点：Code Hosting Website]]></title>
    <link href="http://hustcalm.me/blog/2012/10/24/pan-dian-wo-zhi-dao-de-dai-ma-tuo-guan-zhan-dian-%3Acode-hosting-website/"/>
    <updated>2012-10-24T23:13:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/24/pan-dian-wo-zhi-dao-de-dai-ma-tuo-guan-zhan-dian-:code-hosting-website</id>
    <content type="html"><![CDATA[<p>伴随着开源运动的发展，源码托管站点越来越流行了，提供托管服务的同时，大大促进了开源社区的交流并且加速了源码的共享和更新，下面罗列下我所知道的提供源码托管服务的站点，供大家参考。</p>

<ul>
<li><p><a href="http://sourceforge.net">SourceForge</a>     <br/>
我最早知道的源码托管站点，上面托管了很多有名的项目和软件，现在很多开源软件的下载链接来自于<a href="http://sourceforge.net">SourceForge</a>，比如Python的一些扩展依赖包，编译VLC所需的很多contrib，vim插件需要的ctags以及cscope等等。GFW曾对其不友好，前段时间由于国内用户在其上托管了过多垃圾站点而遭到了<a href="http://sourceforge.net">SourceForge</a>的反封锁。由于其比较有历史，很多协同开发用SVN甚至CVS多一些。</p></li>
<li><p><a href="http://code.google.com">GoogleCode</a>       <!--more-->
大名鼎鼎的Google出品，界面简洁，并结合了<a href="http://developers.google.com">Google Developers</a>，上面也有不少的知名项目，我最近用的PMTK3（机器学习的工具包）就是托管在其上的，但好像一直以来<a href="http://code.google.com">GoogleCode</a>都不是特别火，我也不知道原因。版本控制方面，全面支持SVN,Git,Mercurial等等，我个人比较信赖Google的服务。</p></li>
<li><p><a href="https://bitbucket.org">BitBucket</a>    <br/>
这个貌似在国外用户比较多，知道这个站点是因为PT的缘故，当时追溯PT源码的历史，了解到了TBSource，知道是托管在<a href="https://bitbucket.org">BitBucket</a>上的。后来研究播放器的开发，知道了优秀的射手播放器（SPlayer）的源码是托管在其上的，这个站点比较偏好使用Mercurial和git貌似。</p></li>
<li><p><a href="http://www.codeproject.com">CodeProject</a>     <br/>
知道这个站点是因为自己在学习Windows编程的时候，这上面有很多的小例子的源码，是一个非常好的学习的地方。与其说是源码托管站点，更确切的是一个交流代码，相互学习的地方。有点像StackOverflow，不过这里更多是用代码交流。</p></li>
<li><p><a href="https://github.com">GitHub</a>      <br/>
好吧，最后才说这个大腕，只是因为最近<a href="https://github.com">GitHub</a>太火太火了，压轴出场。相比于其它的源码托管站点，其在功能方面未必见长，不过其Social Coding的理念以及和git的完美结合，吸引了不少coder和project来此安家。比如说ruby，很多vim的插件等等，具体的无需多说，谁用谁知道:)</p></li>
</ul>


<p>欢迎大家访问<a href="https://github.com/hustcalm">我的Github</a>。我的这个<a href="http://hustcalm.me">Octopress博客</a>也是托管在GitHub Pages之上的，使用了<a href="http://jekyllbootstrap.com">Jekyll</a>静态网站生成引擎。</p>

<p><strong>我就知道这么多了，有知道更多的朋友，欢迎留言补充:)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git的global config和repo config]]></title>
    <link href="http://hustcalm.me/blog/2012/10/23/gitde-globle-confighe-repo-config/"/>
    <updated>2012-10-23T18:26:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/23/gitde-globle-confighe-repo-config</id>
    <content type="html"><![CDATA[<p>相比于CVS，SVN，现在越来越喜欢Git了，下面说说Git的全局配置，即global config以及代码库级别的配置，即repo config。</p>

<h2>Global Config</h2>

<p>git的全局配置，存储在$HOME/.gitconfig这个文件里面，对当前用户的所有git repo有效。</p>

<h3>基本配置</h3>

<pre><code>git config --global user.name yourname
git config --global user.email youremail
</code></pre>

<h3>默认编辑器</h3>

<pre><code>git config --global core.editor vim
</code></pre>

<h3>默认merge/diff工具</h3>

<p>设置后需要通过difftool和mergetool启动。</p>

<pre><code>git config --global diff.tool vimdiff
git config --global difftool.prompt false
</code></pre>

<h3>Alias设置别名</h3>

<p>通过别名设置，提高操作效率。</p>

<!--more-->


<p>分支切换</p>

<pre><code>git config --global alias.br branch
git br
</code></pre>

<p>查看日志</p>

<pre><code>git config --global alias.last log --pretty=oneline -1 HEAD
git last
</code></pre>

<p>设置difftool</p>

<pre><code>git config --global alias.df difftool
git df
</code></pre>

<p>提交代码</p>

<pre><code>git config --global alias.cm commit
</code></pre>

<p>查看版本库状态</p>

<pre><code>git config --global alias.st status
</code></pre>

<p>查看远程版本库</p>

<pre><code>git config --global alias.re remote
</code></pre>

<h2>Repo Config</h2>

<p>repo级别的配置，存储在仓库目录的.git/config文件中，可以覆盖全局信息。如果用不同的用户名和邮箱参加不同的项目，这里设置即可，还包括
不同项目git使用习惯的一些不同。
配置命令如下：</p>

<pre><code>git config user.name yournewname
git config user.email yournewemail
</code></pre>

<p>git本身也会存储远程仓库以及分支列表等信息：</p>

<pre><code>cat .git/config
</code></pre>

<h2>References</h2>

<ul>
<li><a href="http://f2e.us/wiki/git-config.html#!/">Frank Xu</a></li>
<li><a href="http://www.kernel.org/pub/software/scm/git/docs/git-config.html">git-config</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012年亚太大学生机器人大赛CCTV视频汇总]]></title>
    <link href="http://hustcalm.me/blog/2012/10/23/2012nian-ya-tai-da-xue-sheng-ji-qi-ren-da-sai-cctvshi-pin-hui-zong/"/>
    <updated>2012-10-23T17:55:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/23/2012nian-ya-tai-da-xue-sheng-ji-qi-ren-da-sai-cctvshi-pin-hui-zong</id>
    <content type="html"><![CDATA[<p>央视终于在CCTV7播出了2012年亚太大学生机器人大赛的国内选拔赛的视频以及国际赛视频，现在把视频链接整理如下，方便各位Roboconer以及热爱机器人的朋友查看。</p>

<ul>
<li><a href="http://tv.cntv.cn/videoset/C39764">央视比赛视频列表链接</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121015100904">《2012年亚太大学生机器人大赛国内选拔活动 初试锋芒》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121016100798">《2012年亚太大学生机器人大赛国内选拔活动 独门秘笈》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121017101086">《2012年亚太大学生机器人大赛国内选拔活动 侠路相逢》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121018100886">《2012年亚太大学生机器人大赛国内选拔活动 出奇制胜》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121019100811">《2012年亚太大学生机器人大赛国内选拔活动 巅峰对决》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121020100533">《2012年亚太大学生机器人大赛国内选拔活动 智者无敌（香港总决赛）》</a></li>
</ul>


<p>Anyway,thx to CCTV!   <br/>
<strong>Hust Go and China Go!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu桌面管理器Unity快捷键大全]]></title>
    <link href="http://hustcalm.me/blog/2012/10/21/ubuntuzhuo-mian-guan-li-qi-unitykuai-jie-jian-da-quan/"/>
    <updated>2012-10-21T10:24:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/21/ubuntuzhuo-mian-guan-li-qi-unitykuai-jie-jian-da-quan</id>
    <content type="html"><![CDATA[<p>在Windows下用惯了TotalCommander了，结合Windows本身的资源管理器，会使工作的效率有质的飞跃，如果要投个票，这个软件必须是Life Changing的:) 在Linux下的桌面管理器很多，重量级的经典的Gnome和KDE，以及很多轻量级的桌面管理器，Ubuntu开发团队为用户提供了他们自家的Unity，个人觉得还是非常好用的:) <br/>
下面这篇文章来自<a href="http://www.askubuntu.com/questions/28086/what-are-unitys-keyboard-and-mouse-shortcuts">askubuntu</a>，这里除了一个比较全面的回答外，还有不少的cheatsheet提供下载，有png的，pdf的，还有源文件SVG的，如果喜欢，大家可以移步到<a href="http://www.askubuntu.com/questions/28086/what-are-unitys-keyboard-and-mouse-shortcuts">原文</a>。也可以通过本文下面部分的链接查看或者下载。    <!--more-->
首先请阅读一下两个post，熟悉Unity的界面元素以及键盘上特殊快捷键的分布：</p>

<ul>
<li><ol>
<li><a href="http://www.askubuntu.com/questions/10228/whats-the-right-terminology-for-unitys-ui-elements">Unity Terminology</a></li>
</ol>
</li>
<li><ol>
<li><a href="http://www.askubuntu.com/questions/19558/what-are-the-meta-super-and-hyper-keys">什么是meta，super，hyper键</a>

<h2>比较官方全面的回答</h2>

<h3>键盘快捷键</h3>

在12.04版本的Unity中，长按<code>Super</code>键，可以得到一个快捷键的列表提示。

<h3>Launcher</h3>

<p>blablabla&#8230;</p></li>
</ol>
</li>
</ul>


<h2>cheatsheet的链接</h2>

<ul>
<li><a href="http://i.stack.imgur.com/pf1y5.png">桌面墙纸上的快捷键列表</a>    <a href="http://ubuntuone.com/p/pBs">源文件</a></li>
<li><a href="http://i.stack.imgur.com/ddQ7n.png">又一个桌面墙纸</a></li>
<li><a href="http://clusterbleep.net/files/Ubuntu_11.04_Unity_Cheat_Sheet.odt">ODT版本的cheatsheet</a></li>
<li><a href="http://clusterbleep.net/files/Ubuntu_11.04_Unity_Cheat_Sheet.pdf">PDF版本的cheatsheet</a></li>
</ul>


<p><strong>Enjoy your Unity:)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github上的终级vimrc]]></title>
    <link href="http://hustcalm.me/blog/2012/10/20/githubshang-de-zhong-ji-vimrc/"/>
    <updated>2012-10-20T17:07:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/20/githubshang-de-zhong-ji-vimrc</id>
    <content type="html"><![CDATA[<p>相比于上面的<a href="http://hustcalm.me/blog/2012/10/20/shi-yong-githe-githublai-guan-li-vimpei-zhi-he-cha-jian/">文章</a>,这个方案合适懒人，只需要clone作者的repo然后install即可，方便但是减少了DIY的乐趣。作者amix也是.vim_runtime的作者，方便起见，我fork了<a href="https://github.com/amix/vimrc">amix/vimrc</a>，以后就可以在此基础上打造自己的.vim_runtime了～</p>

<p>具体如何使用，请直接访问我的repo<a href="https://github.com/hustcalm/vimrc">hustcalm/vimrc</a>.<br/>
Enjoy your Ultimate vimrc:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用git和github来管理vim配置和插件]]></title>
    <link href="http://hustcalm.me/blog/2012/10/20/shi-yong-githe-githublai-guan-li-vimpei-zhi-he-cha-jian/"/>
    <updated>2012-10-20T16:29:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/20/shi-yong-githe-githublai-guan-li-vimpei-zhi-he-cha-jian</id>
    <content type="html"><![CDATA[<p>现在越来越觉得自己离不开Linux了，也越来越离不开VIM了，虽然一直有想学习下Emacs的心思，不过学习曲线太陡峭了，准备细水常流了～之前在windows下使用cygwin，配置VIM用的是<code>.vim_runtime</code>，作者是用svn管理的。今天再去看，发现作者也把自己的.vimrc以及整个配置都迁移到了github上，因此参考了<a href="http://blog.pkufranky.com/2011/11/%E4%BD%BF%E7%94%A8git%E5%92%8Cgithub%E6%9D%A5%E7%AE%A1%E7%90%86vim%E9%85%8D%E7%BD%AE%E5%92%8C%E6%8F%92%E4%BB%B6">这篇文章</a>。请作者原谅我使用了一样的题目～  <br/>
文章的目标为：</p>

<ul>
<li><p>将vim的配置文件使用git管理，并托管到github上</p></li>
<li><p>通过github来安装和更新vim plugin</p></li>
</ul>


<!--more-->


<h2>使用git管理vim配置文件并托管到github上</h2>

<h3>安装git</h3>

<pre><code>sudo apt-get install git-core
</code></pre>

<h3>安装git-subtree</h3>

<pre><code>cd
mkdir github &amp;&amp; cd github
git clone git://github.com/apenwarr/git-subtree.git
cd git-subtree
sudo sh install.sh
</code></pre>

<h3>使用git管理.vim目录</h3>

<pre><code>cd
mkdir .vim
git init
touch README
git add .
git commit -a -m 'Initial commit of .vim configuration'
touch vimrc
git add .
git commit -a -m 'add vimrc'
git remote add 'your repo at github that you created for vim conf'
git push
</code></pre>

<h3>使vimrc配置生效</h3>

<pre><code>ln -s .vim/vimrc .vimrc
</code></pre>

<h2>从github安装和更新vim plugin</h2>

<h3>bootstrap：安装vim-pathogen</h3>

<p>vim-pathogen可以使得每个vim plugin单独放到bundle目录下，方便管理和更新。</p>

<p>首次安装：</p>

<pre><code>cd 
cd .vim &amp;&amp; mkdir bundle
git subtree add \
    --prefix=bundle/vim-pathogen \
    --squash \
    https://github.com/tpope/vim-pathogen.git master
</code></pre>

<p>更新：</p>

<pre><code>git subtree pull \
    --prefix=bundle/vim-pathogen \
    --squash \
    https://github.com/tpope/vim-pathogen.git master
</code></pre>

<p>配置：</p>

<pre><code>runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
</code></pre>

<h3>从github安装其它plugin</h3>

<p>过程类似安装vim-pathogen，也可以使用<a href="https://github.com/pkufranky/vimconf/blob/master/github-plugin-install.sh">pkufranky在github的脚本</a>来简化安装。<br/>
比如安装或更新 <code>https://github.com/hallison/vim-markdow</code></p>

<pre><code>sh github-plugin-install.sh hallison/vim-markdown
</code></pre>

<p>脚本会根据bundle下对应目录是否存在，决定是否安装或者跟新。  <br/>
Done:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cross Complile VLC for Windows On Ubuntu How To and Trouble Shooting ]]></title>
    <link href="http://hustcalm.me/blog/2012/10/19/cross-complile-vlc-for-windows-on-ubuntu-how-to-and-trouble-shooting/"/>
    <updated>2012-10-19T11:53:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/19/cross-complile-vlc-for-windows-on-ubuntu-how-to-and-trouble-shooting</id>
    <content type="html"><![CDATA[<h2>Obtain the toolchain</h2>

<p>I just compile VLC2.0.3 for windows with Ubuntu 11.04 and want to share the compiling process and some trouble shooting.I mainly rely on official guide on <a href="http://www.wiki.videolan.org/Win32Compile">Win32Compile-VideoLANWiki</a>.      To get the toolchain, I just run <code>apt-get install gcc-mingw32 mingw32-binutils</code>.And also the development tools,run <code>apt-get install lua automake autoconf autopoint libtool make gettext pkg-config git subversion cmake cvs zip p7zip nsis bzip2</code>.     <!--more-->
After that I got my Host triplet,<code>i586-mingw32msvc</code> for Windows 32-bits, using the Mingw32 toolchain.</p>

<h2>Get the source code</h2>

<p>If you want to use an official release, as I did, just run:</p>

<pre><code>wget ftp://ftp.videolan.org/pub/videolan/vlc/2.0.3/vlc-2.0.3.tar.xz
tar zxJf vlc-2.0.3.tar.xz
cd vlc-2.0.3
</code></pre>

<p>If you are using the Git development version, you must do a bootstrap to generate the files for configuration and make:</p>

<pre><code>git clone git://git.videolan.org/vlc.git
cd vlc
./bootstrap
</code></pre>

<h2>Prepare 3rd party libraries</h2>

<p>I got the prebuilt libraries by running:</p>

<pre><code>mkdir -p contrib/win32
cd contrib/win32
../bootstrap --host=i586-ming232msvc
make prebuilt
</code></pre>

<p>the codes above will download the latest prebuilt libs on your disk and then install them automatically.  <br/>
If you got a lot time to burn and enjoy compiling the contribs yourself,you may do this:</p>

<pre><code>apt-get install subversion yasm cvs cmake
makdir -p contrib/win32
cd contrib/win32
../bootstrap --host=i586-mingw32msvc
make fetch
make
</code></pre>

<h2>Go Back</h2>

<pre><code>cd -
</code></pre>

<h2>Bootstrap</h2>

<pre><code>./bootstrap
</code></pre>

<h2>Configure</h2>

<pre><code>mkdir win32 &amp;&amp; cd win32
../extras/package/win32/configure.sh --host=i586-mingw32msvc
</code></pre>

<p>you can get a lot of information with <code>../configure -- help | less</code>.</p>

<h2>Building VLC</h2>

<pre><code>make
</code></pre>

<h2>Packaging VLC</h2>

<p>I just run</p>

<pre><code>make package-win32
</code></pre>

<p>and got an auto-installer generated with NSIS and also a zip package and 7zip package.    <br/>
If everything goes well,congratulations,you have got your own compiled VLC for windows,but always there will be some minor problems.The list below is what I got:</p>

<ul>
<li><p>liblibbluray_plugin.la No such file or directory</p></li>
<li><p>dialos/preferences.hpp expected unqualified-id before &#8216;char&#8217;</p></li>
<li><p>error:implicit declaration of av_free,av_malloc,av_realloc</p></li>
<li><p>can&#8217;t find some language files *.nsh while making nsis installer</p></li>
</ul>


<h2>Trouble Shooting</h2>

<h3>liblibbluray_plugin.la</h3>

<p>To be honest, I just avoid this by losing my VLC playing bluray discs with &#8211;disable-bluray passing to configure.</p>

<h3>qt compiling about expected unqualified-id before &#8216;char&#8217;</h3>

<pre><code>In file included from dialogs_provider.cpp:42:0:
dialogs/preferences.hpp: At global scope:
dialogs/preferences.hpp:72:19: error: expected unqualified-id before 'char'
dialogs/preferences.hpp:72:18: error: expected ';' at end of member declaration
dialogs/preferences.hpp:72:24: error: expected unqualified-id before ',' token
I solved this problem by referencing this [link](http://forum.videolan.org/view&gt;topic.php?f=14&amp;t=102257).
</code></pre>

<h3>error: implicit declaration of av_free,av_malloc,av_realloc</h3>

<p>I simply browse avcodec.c and add declarations to avcodec.h by referencing this <a href="http://ffmpeg.org/doxygen/trunk/mem_8c.html">link</a>.</p>

<h3>no such language file *.nsh</h3>

<p>Just read extras/package/win32/vlc.win32.nsi and delete the lines about languages,then you can successfully make the nsis work but if you want your VLC playing with locales perfectly, you&#8217;d better add the languages mannually. <br/>
<strong>The End.Feel free to contact me if you got any problem about compiling:)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Machine Learning工具包PMTK3的简单解析]]></title>
    <link href="http://hustcalm.me/blog/2012/10/16/machine-learninggong-ju-bao-pmtk3de-jian-dan-jie-xi/"/>
    <updated>2012-10-16T23:47:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/16/machine-learninggong-ju-bao-pmtk3de-jian-dan-jie-xi</id>
    <content type="html"><![CDATA[<p>最近学习《机器学习》云里雾里的，很多时候不知道老师在说什么，参考书买的是Kevin P. Murphy的《Machine Learning:A Probabilistic Perspective》，一共上下两卷，打印版本的共50大洋。作者除了书之外，还在google code上维护了与书本同步的工具包代码和数据，叫做PMTK3，主页地址<a href="code.google.com/p/pmtk3">PMTK3 on Google Code</a>。
具体的解释大家可以看Project Home的官方介绍，PMTK是<!--more-->一组Matlab/Octave的函数集合，主要由Matt Dunham，Kevin Murphy编写维护，blabla&#8230;作者把主项目，数据，以及额外的工具包支持分成了三个Project托管在Google Code上，其它两个是<a href="code.google.com/p/pmtkdata">PMTKData</a>以及<a href="code.google.com/p/pmtksupport">PMTKSupport</a>。  <br/>
下载了PMTK后的第一步是运行initPmtk3，主要执行的是下载依赖的package from <code>pmtksupport.googlecode.com</code>到pmtk3/pmtksupportCopy目录。把所有的包下完并解压缩，其中下载用perl（如果有的话）或者urlwrite，解压用unzip。其实也可以实现离线安装，即提前下载好所有的package，人工复制到pmtksupportCopy目录即可。悲剧的是，官方并没有提供一个离线压缩包，google code上只提供了SVN检出，也罢，其实实质也是下载，这个时候可以直接把package检出到pmtksupportCopy目录，方便以后直接<code>svn update</code>，当然也可以checkout到其它目录，然后人工复制。      <br/>
第二步是运行testPmtk3，主要执行了几个Demo，这个时候需要数据支持，因此脚本会触发网络链接去google code上下载数据包，同样的办法，我们也可以用SVN检出，拷贝过去即可。      <br/>
最后，runDemos，官方说运行时间比较长，我觉得是因为下载数据包占用了大量时间，如果提前把数据准备好，放到相应的pmtkdataCopy目录，时间会缩短不少，我没有实际运行，估计也就十分钟左右吧，当然还要看你的电脑配置了。   <br/>
PMTK3的整个工具包有很强的学习意义，Machine Learning自然不必多说，也是学习Matlab的好教材，自己研读作者的代码，可以发现代码的简洁和严谨。目前，这个项目还在维护中，而且作者在做Python的Port，希望之后自己能在这方面榜上点忙。    <br/>
机器学习，模式识别，人工智能，数据挖掘。任重道远，路漫漫修远兮！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress博客添加CreativeCommons License]]></title>
    <link href="http://hustcalm.me/blog/2012/10/16/wei-octopressbo-ke-tian-jia-creativecommons-license/"/>
    <updated>2012-10-16T12:42:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/16/wei-octopressbo-ke-tian-jia-creativecommons-license</id>
    <content type="html"><![CDATA[<p>很久之前就听说了CreativeCommons License，并且看到很多博客站点上也在此License下授权，因此想在自己的Octopress上添加CC License。   <br/>
我添加的是非商业化使用，自由分享修改的授权，即NonCommercial-ShareAlike。      <br/>
具体的添加步骤也是经典的添加侧边栏，只是需要去<a href="creativecommons.org/choose">官方站点</a>选择自己需要的协议，拿到代码。相信玩Octopress
的朋友可以轻松搞定:)     <br/>
Enjoy Creating on Internet:)      <br/>
One For All,All For One.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress博客添加Flag Counter侧边栏]]></title>
    <link href="http://hustcalm.me/blog/2012/10/16/wei-octopressbo-ke-tian-jia-flag-counterce-bian-lan/"/>
    <updated>2012-10-16T11:19:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/16/wei-octopressbo-ke-tian-jia-flag-counterce-bian-lan</id>
    <content type="html"><![CDATA[<p>今天为自己的Octopress博客添加了访问者统计工具，<a href="www.flagcounter.com">Flag Counter</a>，如何获得代码请访问官网。      <br/>
拿到了代码后，添加到侧边栏，在custom/asides添加flag_counter.html，然后在_config.yml中开启即可，其中flag_counter.html的格式如下：</p>

<pre><code>&lt;section&gt;       
&lt;h1&gt;Flag Counter&lt;/h1&gt;       
Code you get from [Flag Counter](www.flagcounter.com)       
&lt;/section&gt;      
</code></pre>

<p>针对以上代码，还需要在_config.yml文件中添加一行：</p>

<pre><code>flag_counter: true  
</code></pre>

<p>为了在本博文中显示flag_counter.html的第一行和最后一行的开关语句，特意额外添加了一组<code>if Tag</code>，Markdown，囧～      <br/>
因为，在<code>rake generate</code>的时候遇到了Liquid Exceptioon&#8230;解决方案参考了<a href="code.google.com/p/liquid-markup/source/browse/trunk/lib/liquid/block.rb?r=2">源码</a>       <br/>
<em>Enjoy your Flag Counter:)</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始使用Bshare和Douban在Octopress上]]></title>
    <link href="http://hustcalm.me/blog/2012/10/16/kai-shi-shi-yong-bsharehe-doubanzai-octopressshang/"/>
    <updated>2012-10-16T01:24:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/16/kai-shi-shi-yong-bsharehe-doubanzai-octopressshang</id>
    <content type="html"><![CDATA[<p>今天对自己的Octopress站点进行了一些小的更新，主要包括替换tag_cloud的显示为category_cloud，增加了Douban的侧边栏，增加了Bshare的文章分享。    <br/>
其中category_cloud，自己目前使用：</p>

<pre><code>git@github.com:hustcalm/octopress-category-list.git
</code></pre>

<p>具体用法可以看README.md。     <br/>
Douban的侧边栏采用经典的source/<em>includes/custom/asides以及</em>config.yml的方法,豆瓣收藏秀的代码获取在<a href="www.douban.com/service/badgemaker">豆瓣收藏秀</a>。<br/>
如何增加Bshare，参考了文章<a href="shanewfx.github.com/blog/2012/08/13/improve-blog-theme/">Octopress主题改造</a>，Bshare官方链接<a href="http://www.bshare.cn">Bshare</a>。<br/>
Done.:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successfully Compiled VLC 2.0.3 Under Ubuntu 11.04]]></title>
    <link href="http://hustcalm.me/blog/2012/10/13/successfully-compiled-vlc-2-dot-0-3-under-ubuntu-11-dot-04/"/>
    <updated>2012-10-13T22:18:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/13/successfully-compiled-vlc-2-dot-0-3-under-ubuntu-11-dot-04</id>
    <content type="html"><![CDATA[<p>With Instructions On <a href="wiki.videolan.org/UnixCompile">UnixCompile</a> and <a href="wiki.videolan.org/User:J-b#VLC_configure_line">User:J-b</a>, I compile VLC successfully on Ubuntu 11.04.</p>

<p>But trouble is there are some libraries missiing or version too old, and can&#8217;t figure it out too clear now. Also after make complete,Got an error&#8221;No Plugins found! Check your VLC installation&#8221; when attempt to run vlc with in bin, but runs fine with ./vlc-static.</p>

<p>Anyway it is a good start to dig into VLC further:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu下检出Cygwin搭建的Octopress遇到的问题]]></title>
    <link href="http://hustcalm.me/blog/2012/10/13/ubuntuxia-jian-chu-cygwinda-jian-de-octopressyu-dao-de-wen-ti/"/>
    <updated>2012-10-13T19:37:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/13/ubuntuxia-jian-chu-cygwinda-jian-de-octopressyu-dao-de-wen-ti</id>
    <content type="html"><![CDATA[<p>原则很简单，只要记住“your_local_octopress_directory”对应的是remote source branch，而“<em>deploy”对应的是remote_master branch即可。    <br/>
而参考上一篇文章中的链接“为已经存在的github Octopress配置本地环境“，分别检出了source和master到本地，然后就出现了以上的对应关系。     <br/>
可问题是，Cygwin搭建的Octopress会出现问题，具体请参考链接<a href="madeye.me/2011/12/17/setup-octopress-on-windows">在Cygwin中搭建Octopress环境</a>，主要是posix-spawn的问题，修改Gemfile.lock以及gems下面的albino.rb即可，可以Ubuntu不存在这种问题，因此需要隔离这一修改，最直观的是想把Gemfile放到.gitignore里面去，不管它了。另外，如果更新Octopress的话，Ruby的版本也会有所变化，我的策略是直接修改.rbenv-version，不理会版本的更新，当然也可以用.gitignore实现。     <br/>
而现在写文章先不管Octopress了，只管</em>deploy。    <br/>
唉，郁闷:(。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[入手了name.com的域名hustcalm.me]]></title>
    <link href="http://hustcalm.me/blog/2012/10/10/ru-shou-liao-name-dot-comde-yu-ming-hustcalm-dot-me/"/>
    <updated>2012-10-10T01:50:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/10/ru-shou-liao-name-dot-comde-yu-ming-hustcalm-dot-me</id>
    <content type="html"><![CDATA[<p>相比来说，name.com家的注册貌似比godaddy家的简单些，而且设置起来更适合于新手，具体请参考文章<a href="http://hugege.com/2010/01/19/the-diference-between-name-com-and-godaddy/">Name.com和Godaddy的一些区别</a>。</p>

<p>今天发现一个比较郁闷的事情，本地rake preview没有问题，rake generate and rake deploy后却在hustcalm.github.com上看不到效果，后来神奇地绑定域名hustcalm.me后看到了效果。莫非是域名绑定惹的祸？可是在绑定前就存在此问题。</p>

<p>下面简单说说如何给Github Pages绑定Name.com的注册域名，以我注册的hustcalm.me域名为例。</p>

<!--more-->


<p>echo &#8220;hustcalm.me&#8221; >> ~/blog/octopress/source/CNAME</p>

<p>git add .</p>

<p>git commit -a -m &#8216;add custom domain CNAME configuration&#8217;</p>

<p>git push origin source</p>

<p>接下来到Name.com的Account里面设置域名指向，添加两个A记录，分别为：</p>

<p>hustcalm.me 207.97.227.245</p>

<p>www.hustcalm.me 207.97.227.245</p>

<p>稍等一会，就可以访问hustcalm.me了。</p>

<p>感觉Name.com家的服务还是很快的。另外，在注册域名的时候默认附带一个收费的whois privacy，不知道是干啥的，但是买了下来。
官方文章请参考<a href="octopress.org/docs/deploying/github">Deploying to Github Pages</a></p>
]]></content>
  </entry>
  
</feed>
