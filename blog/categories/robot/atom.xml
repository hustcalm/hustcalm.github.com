<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Robot | Welcome to Pandora's Box]]></title>
  <link href="http://hustcalm.me/blog/categories/robot/atom.xml" rel="self"/>
  <link href="http://hustcalm.me/"/>
  <updated>2019-05-25T16:32:38-07:00</updated>
  <id>http://hustcalm.me/</id>
  <author>
    <name><![CDATA[Lihang Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Review of Raspberry Pi Robotic Projects - From a Technical Perspective]]></title>
    <link href="http://hustcalm.me/blog/2014/06/21/review-of-raspberry-pi-robotic-projects-from-a-technical-perspective/"/>
    <updated>2014-06-21T04:15:15-07:00</updated>
    <id>http://hustcalm.me/blog/2014/06/21/review-of-raspberry-pi-robotic-projects-from-a-technical-perspective</id>
    <content type="html"><![CDATA[<p>After being the reviewer for the <a href="http://hustcalm.me/blog/2014/02/10/review-of-beaglebone-robotic-projects-from-a-technical-perspective/">BeagleBone Robotic Projects</a>, I&rsquo;m honored to be the reviewer for another book about robotic projects named <a href="http://bit.ly/1hrlCQP">Raspberry Pi Robotic Projects</a>. I will go no further to talk about the differences about <code>BeagleBone</code> and <code>Raspberry Pi</code>, all I know is that they are both cool and amazing. To start to play with <code>Raspberry Pi</code>, I suggest that you
can list the book <a href="http://bit.ly/1hrlCQP">Raspberry Pi Robotics Projects</a> as an option.</p>

<p>In this post, I will give you a very quick overview of the book and tell why it&rsquo;s worth it.</p>

<!--more-->


<h4>Getting Started with Raspberry Pi</h4>

<p>Have no idea what is really <code>Raspberry Pi</code>? Well, just treat it as your <code>Mini Computer</code>. The truth is, it got almost everything what a PC should be equipped with. What&rsquo;s more, it runs Linux which means you can do tons of things with it!</p>

<p>Yes, yes, <code>Raspberry Pi</code> is leading the <code>open hardware community</code> somehow, people design, manufacture, develop and play. Geeks use it for their geek life!</p>

<p>In <strong>chapter 1</strong>, you will be informed the hardware and software of <code>Raspberry Pi</code> and begin to be friends with her.</p>

<h4>Programming Raspberry Pi</h4>

<p>As you want to make <code>Raspberry Pi</code> do something really amazing, you should know how to talk to her. Well, you program to talk. So in <strong>chapter 2</strong>, we will show you how to get comfortable with the way <code>talking(programming)</code>. Besides to knowing <code>Linux</code>, use <code>Python</code> and <code>C/C++</code> is cool:&ndash;)</p>

<h4>Providing Speech Input and Output</h4>

<p>What? You want to talk to her, really. I mean by <code>speaking</code>. Well, that should not be problem. Let&rsquo;s give our robot <code>ears</code> and <code>mouth</code>. <strong>Chapter 3</strong> will show you how to use <code>PocketSphinx</code> to accept your voice commands and utilize <code>Espeak</code> to make <code>Raspberry Pi</code> talk in a robot voice.</p>

<h4>Adding Vision to Raspberry Pi</h4>

<p>How can a beautiful girl be blind! So to make <code>Rasberry Pi</code> see the amazing world, <strong>chapter 4</strong> will tell you how to connect the USB cemara to <code>Raspberry Pi</code> and begin to use <code>OpenCV</code>, which is a fully featured vision library to detect colored objects.</p>

<h4>Creating Mobile Robots on Wheels</h4>

<p>Let&rsquo;s roll! To see the beatiful world around, we need to make our robot able to move. <strong>Chapter 5</strong> will show you how to add motor controller to <code>Raspberry Pi</code> and let her run at free will.</p>

<h4>Making the Unit Very Mobile &ndash; Controlling the Movement of a Robot with Legs</h4>

<p>A girl should really walk, doesn&rsquo;t it? No problem, <strong>chapter 6</strong> tells how to get started with <code>servos</code> and make your mobile platform truly mobile just as a person.</p>

<h4>Avoiding Obstacles Using Sensors</h4>

<p>Oh, there is a wall in front, danger! Don&rsquo;t worry, our <code>Raspberry Pi</code> knows everything and will avoid it easily. <strong>Chapter 7</strong> shows how to use an <code>infrared sensor</code> and <code>USB sonar sensor</code> with <code>Raspberry Pi</code>, also how to use a <code>servo</code> to move a single sensor to make our sening range large enough.</p>

<h4>Going Truly Mobile &ndash; The Remote Control of Your Robot</h4>

<p>You will not always be around with your <code>Raspberry Pi</code>, right? To make sure your <code>Pi</code> is always with you, <strong>Chapter 8</strong> demonstrates how to connect wireless devices to <code>Pi</code> thus enabling us to talk to her remotely. Use a <code>wireless USB keyboard</code>, or <code>a wireless LAN</code> or <code>a ZigBee device</code>, choose as you like.</p>

<h4>Using a GPS Receiver to Locate Your Robot</h4>

<p>No one wants to be told that his <code>Raspberry Pi</code> is lost. Fortunately, we got <code>GPS</code> nowadays for almost free. Connecting <code>Raspberry Pi</code> to a <code>GPS</code> device and accessing the <code>GPS</code> programmatically is mainly covered in <strong>chapter 9</strong>.</p>

<h4>System Dynamics</h4>

<p>Get tired with so much coding for each dedicated task? <strong>Chaper 10</strong> will free you from hell by creating a general control structure. Also you can enable complex functionalities by using the structure of the <code>Robot Operating System</code>.</p>

<h4>By Land, Sea, and Air</h4>

<p>Maybe you don&rsquo;t just want a <code>Raspbery Pi</code>, you really want is a <code>Quadrotor</code>, or a <code>submarine</code> or a <code>mini ship</code>! Nothing is impossible, <strong>Chapter 11</strong> will be a good starting point to creat something really amazing.</p>

<p>I hope that you like <code>Raspberry Pi</code> and the book will do some good. Happy playing and hakcing with <code>Raspberry Pi</code>!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Review of BeagleBone Robotic Projects - From a Technical Perspective]]></title>
    <link href="http://hustcalm.me/blog/2014/02/09/review-of-beaglebone-robotic-projects-from-a-technical-perspective/"/>
    <updated>2014-02-09T19:07:55-08:00</updated>
    <id>http://hustcalm.me/blog/2014/02/09/review-of-beaglebone-robotic-projects-from-a-technical-perspective</id>
    <content type="html"><![CDATA[<p>I&rsquo;m lucky to be a reviewer for the book <code>Beaglebone Robotic Projects</code> few months ago released by <a href="http://www.packtpub.com/">PACKT</a>. And I&rsquo;d like to recommend this book to readers who would like to play with <code>Beagle</code> for a while and start their own robotic projects. Below I&rsquo;ll talk a little bit about this book from a technical perspective.</p>

<!--more-->


<p>First of all, here is the cover of <a href="http://www.packtpub.com/beaglebone-robotic-projects/book">BeagleBone Robotic Projects</a>:</p>

<p><a href="http://www.packtpub.com/beaglebone-robotic-projects/book"><img src="/images/blog_images/books/9329OT_BeagleBone_Robotic_Projects_cov.jpg"></a></p>

<h3>What you will learn from this book</h3>

<h4>What is BeagleBone Black</h4>

<p>As a <code>mini PC</code> or something, it is compared to <code>Raspberry Pi</code> sometimes. Some people would play with them as toys, some would like to do some amazing projects. It is a typical representative of <code>open source hardware</code>! And it runs the incredible <code>Linux</code>. Chapter 1 will guide you through to get your BeagleBone to work with a fully functioning desktop.</p>

<h4>Talk with BeagleBone Black through programming</h4>

<p>To be able to get started with BeagleBone and do what you want, some background in <code>Linux</code>, <code>Python</code> and <code>Programming</code> will be required. The 2nd chapter of the book will show you the basic Linux commands, brief tutorial for Python, etc.</p>

<h4>Simple speech recognition and make the robot speak</h4>

<p>Chapter 3 shows us how to make your robot speak as a robot utilizing <code>eSpeak</code> and how to do simple speech recognition using <code>PocketSphnix</code>. Also to test the <code>USB sound device</code>, we use <code>AlsaMixer</code> built upon <code>ALSA</code> libraries.</p>

<h4>Use camera as the Robot&rsquo;s eyes</h4>

<p>In chapter 4, the book first shows how to connect a USB camera to BeagleBone and viewing the images with <code>GUVCViewer</code>. After that is guide for installing a full-featured vision library &ndash; <code>OpenCV</code>. Then is a demo for detecting colored objects using <code>OpenCV</code>.</p>

<h4>Make it run by using Servos and Motors</h4>

<p>Chapter 5 will tell you how to make a <code>wheeled</code> robot and chapter 6 will show how a <code>legged</code> robot is made. The instructions for hooking up the wires and demos for controlling the servos and motors would definitely help a lot.</p>

<h4>Sense the environment to make some intelligence</h4>

<p>For avoiding obstables, we use a <code>USB sonar sensor</code> in chapter 7, or people will call it <code>ultrasonic sensor</code>. And for letting your robot know where it is, the book shows how to use a <code>GPS</code> module in chapter 9.</p>

<h4>Remote control for more fun</h4>

<p>Chapter 8 shows how to hook up a <code>LCD</code> display to your BeagleBone and control your robot with a <code>2.4GHz Keyboard</code>. Just imagine how it would be fun to see your robot running around whereas you just sitting there.</p>

<h4>Impossible is nothing</h4>

<p>Want something more? Chapter 10 will teach you how to integrate all the parts and skills covered in previous chapters to make a whole system. For more fun, chapter 11 is a good starting point. Want a sailing robot, flying robot or a submarine robot? This chapter will help a lot.</p>

<hr />

<h3>Highlights</h3>

<p>For the highlights of the book, I want to say that it covers a lot for a typical <code>embedded system</code> and will be very helpful tutorials for hobbiests to get started with their robotic projects. Not only hardware, but also open source software are widely used, instructions are clear and easy to read. To summarize,</p>

<ul>
<li>You will know basic Linux through this book</li>
<li>Python will be your handy programming language for doing robotic projects</li>
<li>Getting to know various useful software packages(eSpeak, PocketSphinx, OpenCV, GUVCViewer, etc)</li>
<li>Know the actuators for typical robots(servos and motors)</li>
<li>Have a basic understanding of sensors(ultrasonic, camera, GPS, etc)</li>
<li>Good starting point to make something big(multicopter maybe)</li>
</ul>


<hr />

<p>In a word, you may as well give the book a try and hope it can help:&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 ABU Roboncon 国内赛总结]]></title>
    <link href="http://hustcalm.me/blog/2013/04/30/2012-abu-roboncon-guo-nei-sai-zong-jie/"/>
    <updated>2013-04-30T01:50:00-07:00</updated>
    <id>http://hustcalm.me/blog/2013/04/30/2012-abu-roboncon-guo-nei-sai-zong-jie</id>
    <content type="html"><![CDATA[<p>ABU的赛场离我已经快一年之久了，而这一年的任何一天都可以真切地回忆起备战的节奏，在地下室的紧张调试，在502的欢乐夜宵。2013的战役即将打响，主场是国防科大，不知道今年的格局又会是什么样，列强是否依旧强劲，弱旅中会不会杀出黑马！</p>

<p>为华中科大机器人团队祈祷，希望大家能够低调奋进，在最后的一个多月时间里面有所突破，不能说是弥补去年的缺憾，而是去争取自己的荣耀！</p>

<p>下面再把我在2012比赛后的个人总结贴到博客上，警醒自己，和，自己的队友和兄弟。</p>

<p><strong>正文开始：</strong></p>

<p>从败给国防科学技术大学的那一刻开始，脑子里不停地盘旋着机器人的身影，喝醉后的梦里，第二天的哈工大交流，T238次列车上，以及在北京的三天。多少次，我还固执地认为，比赛还没有结束，C机器人会不会再出什么问题？手动操作手的状态是否良好？可一切都结束了，就这么结束了，没什么不甘的其实，即使华中科大击败了国防科技大学，面对行云流水的电子科技大学，恐怕会沦为一个可笑的对手，即使侥幸拿到冠军，我们凭什么代表中国出战？</p>

<!--more-->


<p>痛定思痛，比赛的结束只能是意味着新的开始，回顾自己在华中科大CCTV机器人团队的一年，回忆和队友，和机器人一路走来，回想起和师兄的讨论甚至争执，更多的是反思和些许的遗憾，自己的遗憾和2012的遗憾。一直想要写些什么东西，在北京的时候就要动笔了，可是一直思忖再三，觉得思想还不成熟。之后就疯狂看队友的总结，看其它学校的总结，看到自己头晕看不下去了，这个时候才渐渐缕清思路，准备写点什么了。</p>

<p>无奈，回到学校还有让人万分DT的毕业设计，幸好12小时之内秒掉了。昨晚，队内总结会，老余凭着几张干巴巴的PPT拿我开刀，第一个发言，也罢，恰好可以打开思路，也起到抛砖引玉的效果。</p>

<p>废话少序，以下是我对华中科大CCTV机器人团队的一些想法，归到到底的终极目标是打造出一支强凝聚力，重情谊，骁勇善战的王牌之师！一切都才刚刚开始，希望华中科大CCTV机器人团队的路越走越宽！</p>

<h3>1、  队内沟通</h3>

<p>不多说，2012的伤悲之处。各个机器人的控制组和机械组人员之间，控制组人员之间都存在严重的沟通不足，更别说机器人和机器人之间的交流了，这就形成了一种各自为战的氛围，大大削弱了机器人团队的战斗力。自始至终，团队都没有很好地拿出应有的凝聚力和战斗力，当然在哈尔滨备赛时的团队风貌还是很不错的，但是为时已晚！</p>

<p>那么是什么导致我们沟通不畅呢？是人员配备不足，忙不完自己的工作吗？是都可以胜任自己的工作，不需要沟通吗？都不是，都是借口，归根到底是没有沟通的意识和热情，态度决定一切，有什么话都闷在心里，对自己，对他人，对团队都是一种极大的伤害。</p>

<p>因此，良好的沟通机制是保障团队高效的战斗力的基本保障，在入队之时，老队员需要有意地去引导大家进行沟通，形成一种良好的沟通机制，慢慢变成机器人团队的一种文化！</p>

<h3>2、  规范培训</h3>

<p>真的不能说去年的培训不合格，而是去年基本就没有培训，这对于团队今后的工作是埋下了地雷的。最后的结果就是浮沙筑高台，控制组调试机器人的过程中遇到各种问题，再回过头去学习，这样必然浪费了宝贵的调试时间，大大降低了调试的效率。</p>

<p>我的想法，培训分为技术培训和文化培训。其中技术培训分为基本的模块培训以及对新一年研发的规划，技术培训需要有一个规范化的手册，可以当成培训的教材，日后也可以成为队内的一个FAQ。至于技术培训的形式的话，讲座加实践，相应的理论讲过之后，就要求队员实际上手，对着上一届的机器人开始简单调试。除了掌握技术，还有些规范性的东西需要强调，比如烧写程序的时候注意不要断电，还有在调试过程中经常碰到的一些小bug，程序中的一些小陷阱。对于机械上的培训，可以从一些机构讲起，控制出身的我就不多说了。</p>

<p>文化培训对于组队的过程至关重要，初步想法是从上一届的比赛视频开始，从小组赛到淘汰赛认真地过一遍，增加对ABU比赛的感性认识，并带给队友一种紧张感和刺激感。另外，为了增加临场的感觉，针对某些经典比赛，把当年的老队员请过来，讲讲历史，让队员从历史中感受团队文件和ABU的精神！</p>

<h3>3、  慎重招新</h3>

<p>很认同胡雨滨的那句话，招新进来的不只是队友，还有敌人。这说明招新是多么关键，不得不慎重！ABU招新，既要找到技术牛人，也要找到勤勤恳恳之人，核心在于如何招到合适的人，能下定决心拼10个月的人。</p>

<p>根据以往招新的经验和教训，今年的招新有以下举措：</p>

<h4>（1）       加快招新的节奏</h4>

<p>比赛完之后就应该着手下一届的准备工作了，这一点对于一个想保持战斗力的队伍是必须的！因此今年把招新时间提前，分为前期小规模的兴趣小组招新以及后期的全校选拔！</p>

<h4>（2）       加大宣传力度</h4>

<p>低调归低调，为了招到对比赛有热情的人，招新宣传的覆盖面还是要做到位，比较理想的形式是搬着机器人做现场展示，有提问和互动，有的队友可能会认为这有点SB或者掉价。No，我觉得这正说明了机器人团队求贤若渴，总之比赛期间低调奋进，想招到人，就可以适当高调起来！</p>

<h4>（3）       精心选拔队友</h4>

<p>说实话，很难在几分钟完全认清一个人，但是有经验的招新人员的辨别能力普遍强一些！因此，招新的笔试需要提高质量，侧重技术点的同时，考察思维能力，这对方案的制定很重要。面试的时候务必请老队员过来把关，严格面试，进行压力面试，考察面试者的心理素质和反应能力。提问的时候可以问一些习惯问题，比如迟到，比如学习效率，比如大四除了比赛有没有别的安排，这样一来可以保证面试者的基本素质，二来可以确定面试者能否全身心投入，而后者往往更是比赛需要的。</p>

<p>如果条件允许的话，针对目前的技术积累和确定的研发方向，可以有目的地去招一些有特长的队员，这对于整个队伍的技术传承很有效果，每年机器人团队能有一项新的技术普及，几年积累下来是相当可观的。</p>

<h4>（4）       控制招新规模</h4>

<p>经过讨论，15个人的规模是比较理想的，按照三台机器人来计算，每台机器人4个人，2个控制组，2个机械组，另外3个电路组。但是为了队伍的弹性，适当多招3~5人。</p>

<h4>（5）       建立末位淘汰制</h4>

<p>为了增加队员的责任感，应该适当提高机器人团队的门槛，对于表现差的队员并屡教不改的，果断淘汰，合理的招新规模为末位淘汰制创造了条件。那么会不会出现淘汰多了，人手不足的情况？我相信，来报名参加比赛，并且通过我们招新的，混的毕竟是少数吧！</p>

<h3>4、  队内管理</h3>

<p>去年加入团队之后，小康反复说过几次，ABU这个比赛就是个工程项目！现在看来，我在一定程度上是认同的。应着项目管理的思维，我觉得既然是一个项目，就应该有相应的项目经理，有开发经理和测试经理，对应于团队角色恐怕就是队长和组长了。</p>

<p>但是ABU的这个团队尤其自身的很多特点，需要核心骨干的存在，去不断推动团队向前，但是任命队长或者组长难免出现不能服众的情况，即使任命技术大牛，也难免队员心里有疙瘩，有不爽。看到其它学校的总结，队长这个角色多少感到比较尴尬。</p>

<p>因此，ABU的队内管理是游走于自我管理和组织管理之间，看感觉又要有规矩，这种管理机制需要在建队的过程中队员之间形成默契。</p>

<h3>5、  技术积累</h3>

<p>比赛完第二天去哈工大参观交流，我被他们工作室墙壁上的海报吸引了。各种技术积累赫然出现在我眼前，并明显感觉到一种传承！应了那句话，比赛不只是你们这一年，比赛是多少代人的积累和沉淀，因此我们需要HUST ABU库，机械上表现为标准件，加工标准等等，而控制上变现为函数库和统一的API。</p>

<p>为了保持机器人团队技术的活力，下面罗列一些技术方向，所有的方向都需要一个长期的开发和积累过程。</p>

<h4>（1）       视觉</h4>

<h4>（2）       全向轮、麦轮</h4>

<h4>（3）       差速轮</h4>

<h4>（4）       激光雷达</h4>

<h4>（5）       Kinect</h4>

<h4>（6）       并联机械手</h4>

<h4>（7）       CAN总线分布式系统</h4>

<h4>（8）       寻线模块</h4>

<h4>（9）       气动技术</h4>

<h4>（10）   驱动器</h4>

<h4>（11）   陀螺仪</h4>

<h4>（12）   各种激光传感器</h4>

<h3>6、  团队发展</h3>

<p>团队的成长应该是伴随着技术的积累和提升，以及文化的沉淀！每年都力争有一些新的技术开发，唯有这样，才能保持团队的竞争力。</p>

<p>经费是限制团队发展的一个关键因素，现状是经费可以支撑我们做比赛，但是为了能够不停尝试新技术，并且给一些犀利的方案提供足够的资金支持，我觉得以后机器人团队自给自足必然是大势所趋！</p>

<p>无意间看到一句话，ABU团队管理与创业管理无异。先不讨论这个是否有道理，多多少少，我感觉备战ABU跟创业十分相似，一群疯子疯狂地追求自己的成功！机器人正在慢慢渗透到我们的生活中，最直观地，为企业输送技术（貌似产品级的东西咱们还不够档次），和企业合作，通过实际在机器人上运用改进其技术（武大用的驱动器貌似解决了厂家不少bug）。最理想的是，我们可以输出自己的产品，这样一来，貌似就是一个团队走向公司化了。有点乱，这个议题还是和大家继续讨论吧。</p>

<h3>7、  指导团队</h3>

<p>每一届新的比赛，决定今年能走多远的，指导团队的影响作用至少会占到30%，从招新到培训，到团队建设，到方案制定，再到联调指导，比赛策略制定，整个备赛和比赛的过程总会充满指导团队的身影，其重要程度不言而喻！</p>

<p>指导团队很重要的一点是如何和新队员沟通，亟其所需，在前期如何快速地指引他们上手，在技术上有所提升，并开始认同ABU的文化，很关键。而一旦新队员顺利上手了，这个时候指导团队应该果断退居二线，让新一届的队员们去做真正属于自己的比赛了。这个时候指导团队在新的团队困难的时候及时站出来，在他们需要督促的时候及时提醒，在他们取得成绩的时候适当鼓励，有没有觉得跟刚爹妈一样！没错，就是这样，作比赛辛苦，指导团队同样不轻松，甚至更辛苦！</p>

<p>更多地指导团队还是引导的作用吧，千万不要事事躬亲，也不要急躁，做好自己的引导作用，适当干预新团队的事务是ok的，过于干预的话只会招致反感。</p>

<h3>8、  方案定制</h3>

<p>单元验证，单元验证！你要做一台车出来，肯定不是一蹴而就的，根据功能点分解，看看每一个部分自己的设想有没有问题，能不能实现功能，够不够快，够不够稳。口说无凭，太多的理论计算也看不出什么，这是时候一定要做实验，有什么想法，尽管去做实验，各种实验，看看自己的这个方案设计是否靠谱！大家可能觉得这会耽误制作机器人的进度啊什么的，恰恰相反，磨刀不误砍柴工，单元验证做得好，出了机器人效果定当立竿见影，机器人制作过程中太多的想当然，最后只能是一台问题叠着问题，漏洞百出的机器人！</p>

<p>上一届比赛的机器人不拆，一来留给新队员上手用，二来可以用作单元验证！一代车不出加工件，基本完成了任务，再往下的路会顺畅很多，方案上才有可能越来越好！</p>

<h3>9、  外校交流</h3>

<p>知己知彼百战不殆！备赛的过程中积极地与其它学校交流，不经意地可能对我们方案上就有所冲击和启发，技术上的一些问题也可以跟他们交流，我想各个学校还是比较开明的，不至于做到技术保守什么的，关键还是看怎么交流！</p>

<p>这个最好专人去做，或者专门的小组去做，具体如何交流，就要看具体的比赛情况啦。</p>

<h3>10、              团队制度</h3>

<p>无规矩不成方圆，CCTV机器人团队需要有自己规范性的制度，主要总结以下几点：</p>

<h4>（1）       放假和请假制度</h4>

<p>一周的周日下午统一放假（当然时间需要新队员去协商），队员每个月最多可以请假三次，一次不超过半天，三次可以连着请，即可以一次请一天半。放假和请假需要根据机器人制作和调试的进度来，可以适当灵活。</p>

<h4>（2）       奖惩制度</h4>

<p>迟到是一只老虎，对团队建设很有害处！初步的奖惩如下，如果有队员迟到，全队一起做俯卧撑！如果队员提前或者超额完成任务，可以有一定自由自配的时间作为奖励！对每个队员进行绩效考核，进行贡献度的计算，奖惩分明，并与末位淘汰制结合起来。</p>

<h4>（3）       队员相互促进的机制</h4>

<p>制作队员面板，贴上队员照片和完成工作之类的。制作签到表，外出注明事项，方便机器人制作人员时间的协调，具体实施需要看试运行的效果！</p>

<h4>（4）       协调员的引入</h4>

<p>电科每台机器人都是有协调员的，具体什么工作职责也不是特别清楚，这方面可以先和电科的交流一下！</p>

<h4>（5）       联调规范性</h4>

<p>无须多说，联调的时候需要规范，严肃，尽量去模拟真实的比赛环境！单场联调，换场联调，干扰联调，模拟比赛，如果每一个环节都认真去做了，那么到了比赛场上我们的机器人不会惧怕任何一个对手！</p>

<h3>11、              杂记</h3>

<h4>（1）       机械上拉线和轴承盒的改进，考虑同步带或者其它结构</h4>

<h4>（2）       如何有效解决四轮着地的问题？</h4>

<h3>12、              待补充</h3>

<p><strong>言胜于行，执行力，执行力！</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012年亚太大学生机器人大赛CCTV视频汇总]]></title>
    <link href="http://hustcalm.me/blog/2012/10/23/2012nian-ya-tai-da-xue-sheng-ji-qi-ren-da-sai-cctvshi-pin-hui-zong/"/>
    <updated>2012-10-23T17:55:00-07:00</updated>
    <id>http://hustcalm.me/blog/2012/10/23/2012nian-ya-tai-da-xue-sheng-ji-qi-ren-da-sai-cctvshi-pin-hui-zong</id>
    <content type="html"><![CDATA[<p>央视终于在CCTV7播出了2012年亚太大学生机器人大赛的国内选拔赛的视频以及国际赛视频，现在把视频链接整理如下，方便各位Roboconer以及热爱机器人的朋友查看。</p>

<ul>
<li><a href="http://tv.cntv.cn/videoset/C39764">央视比赛视频列表链接</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121015100904">《2012年亚太大学生机器人大赛国内选拔活动 初试锋芒》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121016100798">《2012年亚太大学生机器人大赛国内选拔活动 独门秘笈》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121017101086">《2012年亚太大学生机器人大赛国内选拔活动 侠路相逢》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121018100886">《2012年亚太大学生机器人大赛国内选拔活动 出奇制胜》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121019100811">《2012年亚太大学生机器人大赛国内选拔活动 巅峰对决》</a></li>
<li><a href="http://tv.cntv.cn/video/C39764/20121020100533">《2012年亚太大学生机器人大赛国内选拔活动 智者无敌（香港总决赛）》</a></li>
</ul>


<p>Anyway, thx to CCTV!</p>

<p><strong>Hust Go and China Go!</strong></p>
]]></content>
  </entry>
  
</feed>
