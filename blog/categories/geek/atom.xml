<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Geek | Welcome to Pandora's Box]]></title>
  <link href="http://hustcalm.me/blog/categories/geek/atom.xml" rel="self"/>
  <link href="http://hustcalm.me/"/>
  <updated>2014-01-22T16:16:57+08:00</updated>
  <id>http://hustcalm.me/</id>
  <author>
    <name><![CDATA[hustcalm]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Firefox利器Vimperator简明攻略]]></title>
    <link href="http://hustcalm.me/blog/2013/06/09/firefoxli-qi-vimperatorjian-ming-gong-lue/"/>
    <updated>2013-06-09T12:13:00+08:00</updated>
    <id>http://hustcalm.me/blog/2013/06/09/firefoxli-qi-vimperatorjian-ming-gong-lue</id>
    <content type="html"><![CDATA[<p>使用Vimperator也有那么一段时间了，着实再次发现CLI的强大和美好，关键是脱离鼠标后，浏览体验大大增强。正如大部分使用者只会使用一个软件大概20%的功能，我觉得我只是在使用Vimperator 10%的功能，不过这10%已经足以应对普通的需求。</p>

<p>正如Vimperator的原始开发者之一，后来另起炉灶开发了Pentadactyl所说，Vimperator更加注重易用性和效率，而Pentadactyl是专门为geek打造。本攻略适合入门级geek，因为Vimperator的学习曲线还是有那么一点陡的（至少得先对VIM比较熟悉）。然而，本文试图去繁就简，给出核心的一些操作，如果需要更加深入的指导，请参考Vimperator的帮助文件或者我托管在Github上的一个<a href="https://github.com/hustcalm/vimperator">Repository</a>。</p>

<h3>核心操作</h3>

<ul>
<li><code>o</code> Open new link in current tab</li>
<li><code>t</code> Open new link in new tab, also you can input keywords for search</li>
<li><code>Tab</code>  select the candinates recycly</li>
<li><code>f</code> Follow hint and open link in current tab, also very useful for locating user input forms</li>
<li><code>F</code> Follow hint and open link in new tab</li>
<li><code>gi</code> Locate the input form quickly</li>
<li><code>Ctrl + A</code>  Move cursor to the beginning of the line in insert mode</li>
<li><code>Ctrl + E</code>  Move cursor to the end of the line in insert mode</li>
<li><code>Ctrl + U</code>  Delete the characters before cursor in insert mode</li>
<li><code>Ctrl + K</code>  Delete the characters after cursor in insert mode</li>
<li><code>gt</code> Jump to right tab</li>
<li><code>gT</code> Jump to left tab</li>
<li><code>g0</code> Jump to first tab</li>
<li><code>g$</code> Jump to last tab</li>
<li><code>H</code>  Navigate back</li>
<li><code>L</code>  Navigate forward</li>
<li><code>d</code>  Close current tab</li>
<li><code>u</code>  Undo and reopen the lastest closed tab</li>
<li><code>/</code>  Search in current page</li>
<li><code>?</code>  Search in current page reversely</li>
<li><code>:</code>  Command mode</li>
<li><code>;c</code> Follow hint and open the right click menu(also called the contextual menu) for links</li>
</ul>


<h3>详细参考</h3>

<p>请参考<a href="https://github.com/hustcalm/vimperator">Vimperator On Github</a>.</p>

<p>有任何问题，欢迎留言讨论！如果觉得Vimperator不够极客，可以拿Pentadactyl玩玩:&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[彻底搞懂字符集和字符编码(Cooked from other posts)]]></title>
    <link href="http://hustcalm.me/blog/2013/04/06/che-di-gao-dong-zi-fu-ji-he-zi-fu-bian-ma-cooked-from-other-posts/"/>
    <updated>2013-04-06T12:08:00+08:00</updated>
    <id>http://hustcalm.me/blog/2013/04/06/che-di-gao-dong-zi-fu-ji-he-zi-fu-bian-ma-cooked-from-other-posts</id>
    <content type="html"><![CDATA[<p>ASCII,ANSI,Unicode,UTF-8,BOM,UCS,GB2312,GBK,GB18030,BIG5,Code Page&hellip; Blabla&hellip;</p>

<p>对于以上概念，你是否都理解了呢？下面，带着大家彻底搞懂字符集和字符编码的相关知识。我是读了别人的posts，然后cook出来，整理思路，所以需要大家边读边仔细阅读相应的post哦～</p>

<h2>入门篇</h2>

<p>首先，简单了解一下。</p>

<ul>
<li><a href="http://www.imkevinyang.com/2009/02/%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%9A%84%E6%95%85%E4%BA%8B%EF%BC%88ascii%EF%BC%8Cansi%EF%BC%8Cunicode%EF%BC%8Cutf-8%E5%8C%BA%E5%88%AB%EF%BC%89.html">字符编解码的故事（ASCII，ANSI，Unicode，Utf-8区别）</a></li>
</ul>


<p>这篇文章，以类似《明朝那些事儿》的文笔，向大家介绍了”编码“的简史。</p>

<ul>
<li><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">字符编码笔记：ASCII，Unicode和UTF-8</a></li>
</ul>


<p>阮一峰的博客，重点描述了ASCII和Unicode，并强调“<strong>UTF-8是Unicode的实现方式之一</strong>”，Little endian和Big endian的典故也说到了。跟上篇文章一样，适合入门。</p>

<h2>初级篇</h2>

<p>入门之后，需要搞清楚究竟“字符集”和“字符编码”是什么东东。</p>

<!--more-->


<ul>
<li><a href="http://www.iteye.com/topic/97803">深入了解字符集和编码</a></li>
</ul>


<p>这篇文章，给出了“字符集”和“字符编码”的“<strong>定义</strong>”，并对ANSI编码有了比较合理的解释（使用2个字节来代表一个字符的各种汉字延伸编码方式，称为ANSI编码。 在简体中文系统下，ANSI编码代表GB2312编码，在日文操作系统下，ANSI编码代表JIS编码。 ）这里也提到了BOM的概念，在“<strong>编程语言与编码</strong>”那里描述了编程语言对于内部字符串是如何进行编码的。</p>

<h2>中级篇</h2>

<p>在基本了解了“字符集”和“字符编码”是什么东东后，让我们再仔细看看主流的“字符集和编码”。</p>

<ul>
<li><a href="http://space.itpub.net/55022/viewspace-713849">各种字符集和编码详解</a></li>
</ul>


<p>本文也是按照“<strong>字符编码的历程</strong>”来展开，ASCII，ISO8859-1，GB2312，GBK，GB18030，BIG5，UCS，Unicode都说到了。而在编码方面，重点说了UTF-8，UTF-16，UTF-32，UTF-7。此外，提到了MIME（多用途网际邮件扩充协议），是现在邮件编码方式的主流，其中定义了两种编码方法Base64和QP（Quote-Pritable）。</p>

<h2>高级篇</h2>

<p>下面，更加细致地了解下“编码”是如何存储的，以及分析下优缺点。</p>

<ul>
<li><a href="http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html">字符集和字符编码（Charset &amp; Encoding）</a></li>
</ul>


<p>本文知识点比较系统，在看了以上的文章后，可以“<strong>系统</strong>”地整理下思路了。本文在描述了“ASCII字符集&amp;编码",&ldquo;GBXXXX字符集&amp;编码”以及“BIG5字符集&amp;编码”后，提出了“<strong>伟大的创想Unicode</strong>”。之后，又说到了“互联网传输”的编码问题，Accept-Charset/Accept-Encoding/Accept-Language/Content-Type/Content-Encoding/Content-Language。</p>

<h2>拾遗篇</h2>

<p>了解“<strong>字符集</strong>”和“<strong>字符编码</strong>”的主线了，可能还对一些常见的概念疑惑。下面的链接就一些概念进行了简明的解释。</p>

<ul>
<li><a href="http://bbs.chinaunix.net/thread-3610023-1-1.html">中文字符编码标准+Unicode+Code Page</a></li>
</ul>


<p>这里是想重点了解“<strong>Code Page</strong>”的，跟操作系统的实现有关。</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Code_page">Code page</a></li>
</ul>


<p>Code page is another term for character encoding. It consists of a table of values that describes the character set for a particular language. The term code page originated from IBM&rsquo;s EBCDIC-based mainframe systems,[1] but many vendors use this term including Microsoft, SAP,[2] and Oracle Corporation.[3] Vendors often allocate their own code page number to a character encoding, even if it is better known by another name (for example UTF-8 character encoding has code page numbers 1208 at
IBM, 65001 at Microsoft, 4110 at SAP).</p>

<ul>
<li><a href="http://hi.baidu.com/kumosheng/item/0864400782d3df7abfe97e87">区位码和内码，外码，国标码</a></li>
</ul>


<p>我国“技术专家”的智慧结晶！看看汉字是怎么被编码的！～</p>

<ul>
<li><a href="http://www.htmer.com/article/232.htm">输入法中全角/半角的区别以及切换方法</a></li>
</ul>


<p>刚学输入法的时候，就一直被“全角”和“半角”折磨着，现在终于搞明白了！</p>

<h2>总结篇</h2>

<p>输入，编码，显示，存储，读取，解码，输出。</p>

<p>看来，不管什么东西，还是要从“操作系统”的层面去认识！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用PortableApps.com制作自己的U3盘，实现PC Anywhere]]></title>
    <link href="http://hustcalm.me/blog/2012/10/24/shi-yong-portableapps-dot-comzhi-zuo-zi-ji-de-u3pan-%2Cshi-xian-pc-anywhere/"/>
    <updated>2012-10-24T23:55:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/10/24/shi-yong-portableapps-dot-comzhi-zuo-zi-ji-de-u3pan-,shi-xian-pc-anywhere</id>
    <content type="html"><![CDATA[<p>现在绿化软件的方法层出不穷，主流的云端软件平台以及ThinAPP基本都是在一个SandBox中运行软件，实现所谓的绿色化。今天向大家推荐一款绿色软件平台<a href="http://portableapps.com">PortableApps.com</a>，具体实现机理没有研究，不过使用起来觉得较好，关于是可以安装到U盘中随身携带，碰到了脾气不好的电脑，很有可能就派上用场了，呵呵:)</p>

<!--more-->


<p>具体如何安装什么的，就不罗嗦了，标准的Windows软件的安装和使用方法，目前<a href="http://portableapps.com">PortableApps.com</a>支持所有的Windows系列系统以及Linux下的Wine，下面只给出链接，想用的朋友自行下载安装折腾吧:)</p>

<ul>
<li><a href="http://portableapps.com">PortableApps.com的官方主页</a>     <br/>
其下载链接是在<a href="http://sourceforge.net">SourceForge</a>上的，有可能需要梯子，如果有困难，可以移步别处下载。</li>
<li><a href="http://portableapps.com/development">PortableApps.Development</a>       <br/>
教你怎么制作自己的绿色软件，当然是符合一定规范的，这里有可以折腾的地方。</li>
<li><a href="http://www.portableappc.com">PortableApps.com的中文站点</a>     <br/>
这里有一些比较大型软件的绿化，比如QQ，迅雷，WPS等等，有需要的朋友就有福啦:)而官方站点通常是一些国外的软件，而且基本上都是比较轻量级的。</li>
<li><a href="http://www.portableappc.com/guide">PortableApps.com的中文开发指引</a>   <br/>
个人认为这个开发指引还是比较赞的，可以给没有多少软件开发功底的同学一个制作软件的机会，有开发基础的也可以学习下PortableApps.com的软件格式约定。</li>
<li><a href="http://portableappz.blogspot.com">PortableAppZ</a>      <br/>
这是一个山寨版，相比于官方的只提供开源软件，PortableAppZ提供很多常用的软件，不过访问blogspot比较困难，希望的朋友自己想办法吧&hellip;</li>
</ul>


<p>除了这个，我特别喜欢微软收购的一个公司开发的一个工具套件<a href="http://www.systeminternals.com">SystemInternals</a>，把它作为系统system32目录下系统工具的一个补充，没有用的朋友可以试试。</p>

<p><strong>有更好的办法或者很酷的绿化软件的方法，请留言分享:)</strong></p>
]]></content>
  </entry>
  
</feed>
