<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Network | Welcome to Pandora's Box]]></title>
  <link href="http://hustcalm.me/blog/categories/network/atom.xml" rel="self"/>
  <link href="http://hustcalm.me/"/>
  <updated>2014-01-22T14:33:40+08:00</updated>
  <id>http://hustcalm.me/</id>
  <author>
    <name><![CDATA[hustcalm]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[httplib httplib2 urllib urllib2-what's the difference]]></title>
    <link href="http://hustcalm.me/blog/2013/11/14/httplib-httplib2-urllib-urllib2-whats-the-difference/"/>
    <updated>2013-11-14T11:24:00+08:00</updated>
    <id>http://hustcalm.me/blog/2013/11/14/httplib-httplib2-urllib-urllib2-whats-the-difference</id>
    <content type="html"><![CDATA[<p>Lots of people may got confused by the Python modules- <code>httplib, httplib2, urllib, urllib2</code>. Judge from their names, we may prefer the x2 module because they may be version 2 of the module and should work better. Maybe you are right for some degree(as for the httplib).</p>

<p>However, things are a little bit complicated which needs a brief explanation indeed.</p>

<!--more-->


<h2>What&rsquo;s the claim</h2>

<p>First, let&rsquo;s see what a specified module&rsquo;s aim. I will quote from the official site:&ndash;)</p>

<h3>httplib</h3>

<p><a href="http://docs.python.org/2/library/httplib.html">Here</a> is a link from <code>The Python Standard Library</code> for <code>Python 2.7.6</code>.</p>

<pre><code>This module defines classes which implement the client side of the HTTP and HTTPS protocols. 
It is normally not used directly — the module urllib uses it to handle URLs that use HTTP and HTTPS.
</code></pre>

<h3>httplib2</h3>

<p><a href="https://code.google.com/p/httplib2/">This</a> is the official website hosted on <code>Google Code</code>. It claims:</p>

<pre><code>A comprehensive HTTP client library that supports many features left out of other HTTP libraries.
</code></pre>

<p>and the <code>Project Goal</code>:</p>

<pre><code>To become a worthy addition to the standard Python library.
</code></pre>

<p>It features <code>HTTP and HTTPS</code>, <code>Keep-Alive</code>, <code>Authentication</code>(support <em>Digest</em>, <em>Basic</em>, <em>WSSE</em>, <em>HMAC Digest</em> and <em>Google Account Authentication</em>), <code>Caching</code>, <code>All Methods</code>, <code>Redirects</code>, <code>Compression</code>, <code>Lost update support</code> and <code>Unit Tested</code>.</p>

<h3>urllib</h3>

<p>Quote from <a href="http://docs.python.org/2/library/urllib.html">here</a>:</p>

<pre><code>This module provides a high-level interface for fetching data across the World Wide Web. 
In particular, the urlopen() function is similar to the built-in function open(), but accepts Universal Resource Locators (URLs) instead of filenames.  
Some restrictions apply — it can only open URLs for reading, and no seek operations are available.
</code></pre>

<h3>urllib2</h3>

<p><a href="http://docs.python.org/2/library/urllib2.html">The Standard Python Library</a> stats that:</p>

<pre><code>The urllib2 module defines functions and classes which help in opening URLs (mostly HTTP) in a complex world — basic and digest authentication, redirections, cookies and more.
It's an extensible library for opening URLs.
</code></pre>

<h2>What&rsquo;s the difference</h2>

<h3>httplibx and urllibx</h3>

<p><code>urllib/urllib2</code> is built on top of <code>httplib</code>. It offers more features than writing to <code>httplib</code> directly.
However, <code>httplib</code> gives you finer control over the underlying connections.</p>

<p>If you&rsquo;re dealing solely with HTTP/HTTPs and need access to HTTP specific stuff, use httplib.
For all other cases, use urllibx(note that <code>urllib and urllib2</code> have different capabilities, thus are always used together).</p>

<h3>httplib and httplib2</h3>

<p>Basically, httplib2 is <code>Google's python httplib implementation</code> but much more powerful.</p>

<p>They actually do the same things utilizing HTTP/HTTPs and other network protocals like FTP, typically we can call them <code>HTTP client library</code>.</p>

<p>If <code>httplib</code> can&rsquo;t fulfill your need(as if you need the <code>Redirects</code> feature), consider switching to <code>httplib2</code> then.</p>

<p>To make things simpler, I&rsquo;d rather using <code>httplib2</code> as my default <code>HTTP client library</code> for Python.</p>

<h3>urllib and urllib2</h3>

<p>Quote from this post <a href="http://www.hacksparrow.com/python-difference-between-urllib-and-urllib2.html">Python: difference between urllib and urllib2</a>:</p>

<p><code>urllib</code> and <code>urllib2</code> are both Python modules that do URL request related stuff but offer different functionalities. Their two most significant differences are listed below:</p>

<ul>
<li><code>urllib2</code> can accept a Request object to set the headers for a URL request, urllib accepts only a URL. That means, you cannot masquerade your User Agent string etc.</li>
<li><code>urllib</code> provides the urlencode method which is used for the generation of GET query strings, urllib2 doesn&rsquo;t have such a function. This is one of the reasons why urllib is often used along with urllib2.</li>
</ul>


<p><strong>Note</strong>:</p>

<p>The urllib module has been split into parts and renamed in Python 3 to <code>urllib.request</code>, <code>urllib.parse</code>, and <code>urllib.error</code>. The 2to3 tool will automatically adapt imports when converting your sources to Python 3. Also note that the urllib.urlopen() function has been removed in Python 3 in favor of urllib2.urlopen().</p>

<h2>Usage</h2>

<ul>
<li><a href="http://docs.python.org/2.7/howto/urllib2.html#urlerror">HOWTO Fetch Internet Resources Using urllib2</a></li>
<li><a href="http://www.pythonforbeginners.com/python-on-the-web/how-to-use-urllib2-in-python/">How to use urllib2 in Python</a></li>
<li><a href="http://adchoices.sinaapp.com/topic/47/python-%E6%A8%A1%E5%9D%97-httplib-urllib%E5%92%8Curllib2%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95">python 模块：httplib、urllib和urllib2的简单用法</a></li>
<li><a href="http://zhuoqiang.me/python-urllib2-usage.html">Python 标准库 urllib2 的使用细节</a></li>
<li><a href="http://httplib2.googlecode.com/hg/doc/html/libhttplib2.html">httplib2 v0.4 documentation</a></li>
</ul>


<h2>Reference</h2>

<ul>
<li><a href="http://www.hacksparrow.com/python-difference-between-urllib-and-urllib2.html">Python: difference between urllib and urllib2</a></li>
<li><a href="http://www.zacwitte.com/resolving-http-redirects-in-python">Resolving HTTP Redirects in Python</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Many thanks to CMCC &amp; CMCC-EDU]]></title>
    <link href="http://hustcalm.me/blog/2012/09/26/many-thanks-to-cmcc-and-cmcc-edu/"/>
    <updated>2012-09-26T00:43:00+08:00</updated>
    <id>http://hustcalm.me/blog/2012/09/26/many-thanks-to-cmcc-and-cmcc-edu</id>
    <content type="html"><![CDATA[<h2>Wireless NetWork is nice  of CMCC</h2>

<p>Even got stuck by CAS&rsquo;s policy about bandwidth limit, prefered to use CMCC wireless network though some times there is no speed.</p>
]]></content>
  </entry>
  
</feed>
